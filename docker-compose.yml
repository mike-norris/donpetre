services:
  postgresql:
    image: postgres:15-alpine
    container_name: donpetre-postgres
    environment:
      POSTGRES_DB: donpetre
      POSTGRES_USER: ${DB_USER:-donpetre}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-donpetre_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./donpetre-gateway/init-scripts/01-init-schema.sql:/docker-entrypoint-initdb.d/01-init-schema.sql:ro
      - ./donpetre-knowledge-ingestion/init-scripts/02-ingestion-schema.sql:/docker-entrypoint-initdb.d/02-ingestion-schema.sql:ro
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-donpetre} -d donpetre"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: donpetre-redis
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  api-gateway:
    build:
      context: .
      dockerfile: donpetre-gateway/Dockerfile
    container_name: donpetre-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: donpetre
      DB_USERNAME: ${DB_USER:-donpetre}
      DB_PASSWORD: ${DB_PASSWORD:-donpetre_pass}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_BACKUP_SECRET: ${JWT_BACKUP_SECRET}
      INGESTION_SERVICE_HOST: knowledge-ingestion
      INGESTION_SERVICE_PORT: 8081
      MANAGEMENT_SERVICE_HOST: management-service
      MANAGEMENT_SERVICE_PORT: 8082
      SEARCH_SERVICE_HOST: search-service
      SEARCH_SERVICE_PORT: 8083
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  knowledge-ingestion:
    build:
      context: .
      dockerfile: donpetre-knowledge-ingestion/Dockerfile
    container_name: donpetre-knowledge-ingestion
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: donpetre
      DB_USERNAME: ${DB_USER:-donpetre}
      DB_PASSWORD: ${DB_PASSWORD:-donpetre_pass}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      JIRA_URL: ${JIRA_URL:-}
      JIRA_USERNAME: ${JIRA_USERNAME:-}
      JIRA_TOKEN: ${JIRA_TOKEN:-}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  management-service:
    build:
      context: .
      dockerfile: donpetre-management-service/Dockerfile
    container_name: donpetre-management-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: donpetre
      DB_USERNAME: ${DB_USER:-donpetre}
      DB_PASSWORD: ${DB_PASSWORD:-donpetre_pass}
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  search-service:
    build:
      context: donpetre-search-service/
      dockerfile: Dockerfile
    container_name: donpetre-search-service
    ports:
      - "8083:8083"
    environment:
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: donpetre
      DB_USERNAME: ${DB_USER:-donpetre}
      DB_PASSWORD: ${DB_PASSWORD:-donpetre_pass}
      SEARCH_SERVICE_HOST: 0.0.0.0
      SEARCH_SERVICE_PORT: 8083
      SEARCH_DEBUG: ${SEARCH_DEBUG:-false}
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  web-ui:
    build:
      context: ./donpetre-ui
      dockerfile: Dockerfile
    container_name: donpetre-ui
    ports:
      - "8084:80"
    environment:
      VITE_API_URL: http://localhost:8080/api
      NGINX_HOST: 0.0.0.0
      NGINX_PORT: 80
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - donpetre-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
    name: donpetre_postgres_data
  redis_data:
    driver: local
    name: donpetre_redis_data

networks:
  donpetre-network:
    driver: bridge
    name: donpetre-network
